//
// Grid system
// --------------------------------------------------
// Grid
// Used with the grid mixins below
@grid-columns:          12;
@grid-column-padding:   15px; // Left and right inner padding
@grid-float-breakpoint: 768px;

// Grid
.make-row(@dir: ltr) {
  // Then clear the floated columns
  .clearfix();
  .process(@dir) when (escape(@dir) = rtl) {
    @media (min-width: @grid-float-breakpoint) {
      > * { float: right !important; }
    } 
  }
  .process(@dir);
  
}
.make-column(@cols, @dir: normal) {
  // Prevent columns from collapsing when empty
  min-height: 1px;
  .process(@cols, @dir) when (escape(@dir) = left) {
    // Set inner padding as gutters instead of margin
    padding-left: 0;
    padding-right: @grid-column-padding;
  }
  .process(@cols, @dir) when (escape(@dir) = right) {
    // Set inner padding as gutters instead of margin
    padding-left: @grid-column-padding;
    padding-right: 0;
  }
  .process(@cols, @dir) when (escape(@dir) = full) {
    // Set inner padding as gutters instead of margin
    padding-left: 0;
    padding-right: 0;
  }
  .process(@cols, @dir) when (escape(@dir) = normal) {
    // Set inner padding as gutters instead of margin
    padding-left: @grid-column-padding;
    padding-right: @grid-column-padding;
  }
  .process(@cols, @dir);
  // Proper box-model (padding doesn't add to width)
  .box-sizing(border-box);
  @media (min-width: @grid-float-breakpoint) {
    float: left;
    // Calculate width based on number of columns available
    width: percentage(@cols / @grid-columns);
  }
}

.make-column-offset(@columns) {
  @media (min-width: @grid-float-breakpoint) {
    margin-left: percentage(@columns / @grid-columns);
  }
}